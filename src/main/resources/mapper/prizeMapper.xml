<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--命令空间-->
<mapper namespace="com.szxfd.springboot.web.dao.PrizeMapper">

    <sql id="query_prize_where">
        <if test="prizeCustom!=null">
            <if test="prizeCustom.title!=null and prizeCustom.title!=''">
                and `prize`.title LIKE '%${prizeCustom.title }%'
            </if>
            <if test="prizeCustom.desc!=null and prizeCustom.desc!=''">
                and `prize`.`desc` LIKE '%${prizeCustom.desc }%'
            </if>
            <if test="prizeCustom.price!=null and prizeCustom.price!=''">
                and `prize`.`price` = #{prizeCustom.price}
            </if>
            <if test="prizeCustom.quantity!=null and prizeCustom.quantity!=''">
                and `prize`.`quantity` = #{prizeCustom.quantity}
            </if>
        </if>
        <if test="ids!=null">
            <foreach collection="ids" item="prize_id" open="and (" close=")" separator="or">
                <!--每个遍历需要拼接的串-->
                id=#{prize_id}
            </foreach>
            <!--使用实现方式2：and id in (1,2,3)-->
            <foreach collection="ids" item="prize_id" open="and id in (" close=")" separator=",">
                <!--每个遍历需要拼接的串-->
                #{prize_id}
            </foreach>
        </if>
    </sql>

    <sql id="all_insert_keys">
        `title`,`desc`,`price`,`quantity`,`create_time`
    </sql>

    <!--用户信息综合查询-->
    <select id="queryPrizeList" parameterType="prizeQueryVo" resultType="prizeCustom">
        SELECT * FROM `prize`
        <!-- where可以自动去掉条件中的第一个and-->
        <where>
            <!--refid为引用sql片段的id，如果refid不在本mapper文件中，需要在前面加上namespace-->
            <include refid="query_prize_where"></include>
            <!--在这里可以继续引用其他的sql片段-->
        </where>
    </select>

    <!--用户信息综合查询的总数-->
    <select id="queryPrizeCount" parameterType="prizeQueryVo" resultType="int">
        SELECT count(*) FROM `prize`
        <where>
            <include refid="query_prize_where"></include>
        </where>
    </select>

    <select id="queryPrizeById" parameterType="int" resultType="prizeCustom">
        SELECT * FROM `prize` WHERE id = #{id}
    </select>

    <select id="queryPrizeByTitle" parameterType="string" resultType="prizeCustom">
        SELECT * FROM `prize` WHERE title LIKE '%${value}%'
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="prizeCustom">
        insert into `prize`(
        <include refid="all_insert_keys"/>
        )
        values(#{title},#{desc},#{price},#{quantity},sysdate())
    </insert>

    <update id="removeInLogical" parameterType="int">
        update `prize` set `is_delete` = true, `update_time` = sysdate() where `id` = #{value}
    </update>

    <update id="update" parameterType="prizeCustom">
        update `prize` set
        `title` = #{title}, `desc` = #{desc}, `price` = #{price}, `quantity` = #{quantity}, `update_time` = sysdate()
        where `id` = #{id}
    </update>

</mapper>